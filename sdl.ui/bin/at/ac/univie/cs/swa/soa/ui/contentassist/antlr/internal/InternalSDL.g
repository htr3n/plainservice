/*
* generated by Xtext
*/
grammar InternalSDL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package at.ac.univie.cs.swa.soa.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.ac.univie.cs.swa.soa.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.ac.univie.cs.swa.soa.services.SDLGrammarAccess;

}

@parser::members {
 
 	private SDLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SDLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSDL
entryRuleSDL 
:
{ before(grammarAccess.getSDLRule()); }
	 ruleSDL
{ after(grammarAccess.getSDLRule()); } 
	 EOF 
;

// Rule SDL
ruleSDL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSDLAccess().getGroup()); }
(rule__SDL__Group__0)
{ after(grammarAccess.getSDLAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleService
entryRuleService 
:
{ before(grammarAccess.getServiceRule()); }
	 ruleService
{ after(grammarAccess.getServiceRule()); } 
	 EOF 
;

// Rule Service
ruleService
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getServiceAccess().getGroup()); }
(rule__Service__Group__0)
{ after(grammarAccess.getServiceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getGroup()); }
(rule__Operation__Group__0)
{ after(grammarAccess.getOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNode
entryRuleNode 
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeAccess().getGroup()); }
(rule__Node__Group__0)
{ after(grammarAccess.getNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataElement
entryRuleDataElement 
:
{ before(grammarAccess.getDataElementRule()); }
	 ruleDataElement
{ after(grammarAccess.getDataElementRule()); } 
	 EOF 
;

// Rule DataElement
ruleDataElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataElementAccess().getAlternatives()); }
(rule__DataElement__Alternatives)
{ after(grammarAccess.getDataElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComplexElement
entryRuleComplexElement 
:
{ before(grammarAccess.getComplexElementRule()); }
	 ruleComplexElement
{ after(grammarAccess.getComplexElementRule()); } 
	 EOF 
;

// Rule ComplexElement
ruleComplexElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComplexElementAccess().getGroup()); }
(rule__ComplexElement__Group__0)
{ after(grammarAccess.getComplexElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleElement
entryRuleSimpleElement 
:
{ before(grammarAccess.getSimpleElementRule()); }
	 ruleSimpleElement
{ after(grammarAccess.getSimpleElementRule()); } 
	 EOF 
;

// Rule SimpleElement
ruleSimpleElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleElementAccess().getGroup()); }
(rule__SimpleElement__Group__0)
{ after(grammarAccess.getSimpleElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQN
entryRuleFQN 
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNAccess().getGroup()); }
(rule__FQN__Group__0)
{ after(grammarAccess.getFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFqnWildcard
entryRuleFqnWildcard 
:
{ before(grammarAccess.getFqnWildcardRule()); }
	 ruleFqnWildcard
{ after(grammarAccess.getFqnWildcardRule()); } 
	 EOF 
;

// Rule FqnWildcard
ruleFqnWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFqnWildcardAccess().getGroup()); }
(rule__FqnWildcard__Group__0)
{ after(grammarAccess.getFqnWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule DATATYPE
ruleDATATYPE
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATATYPEAccess().getAlternatives()); }
(rule__DATATYPE__Alternatives)
{ after(grammarAccess.getDATATYPEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MULTIPLICITY
ruleMULTIPLICITY
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULTIPLICITYAccess().getAlternatives()); }
(rule__MULTIPLICITY__Alternatives)
{ after(grammarAccess.getMULTIPLICITYAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SDL__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSDLAccess().getServicesAssignment_4_0()); }
(rule__SDL__ServicesAssignment_4_0)
{ after(grammarAccess.getSDLAccess().getServicesAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getSDLAccess().getDataAssignment_4_1()); }
(rule__SDL__DataAssignment_4_1)
{ after(grammarAccess.getSDLAccess().getDataAssignment_4_1()); }
)

    |(
{ before(grammarAccess.getSDLAccess().getNodesAssignment_4_2()); }
(rule__SDL__NodesAssignment_4_2)
{ after(grammarAccess.getSDLAccess().getNodesAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataElementAccess().getSimpleElementParserRuleCall_0()); }
	ruleSimpleElement
{ after(grammarAccess.getDataElementAccess().getSimpleElementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataElementAccess().getComplexElementParserRuleCall_1()); }
	ruleComplexElement
{ after(grammarAccess.getDataElementAccess().getComplexElementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleElement__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleElementAccess().getTypeAssignment_3_0()); }
(rule__SimpleElement__TypeAssignment_3_0)
{ after(grammarAccess.getSimpleElementAccess().getTypeAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getSimpleElementAccess().getRefAssignment_3_1()); }
(rule__SimpleElement__RefAssignment_3_1)
{ after(grammarAccess.getSimpleElementAccess().getRefAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DATATYPE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATATYPEAccess().getStringEnumLiteralDeclaration_0()); }
(	'string' 
)
{ after(grammarAccess.getDATATYPEAccess().getStringEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDATATYPEAccess().getIntegerEnumLiteralDeclaration_1()); }
(	'integer' 
)
{ after(grammarAccess.getDATATYPEAccess().getIntegerEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getDATATYPEAccess().getFloatEnumLiteralDeclaration_2()); }
(	'float' 
)
{ after(grammarAccess.getDATATYPEAccess().getFloatEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getDATATYPEAccess().getDateEnumLiteralDeclaration_3()); }
(	'date' 
)
{ after(grammarAccess.getDATATYPEAccess().getDateEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getDATATYPEAccess().getTimeEnumLiteralDeclaration_4()); }
(	'time' 
)
{ after(grammarAccess.getDATATYPEAccess().getTimeEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getDATATYPEAccess().getDatetimeEnumLiteralDeclaration_5()); }
(	'dateTime' 
)
{ after(grammarAccess.getDATATYPEAccess().getDatetimeEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getDATATYPEAccess().getBinaryEnumLiteralDeclaration_6()); }
(	'binary' 
)
{ after(grammarAccess.getDATATYPEAccess().getBinaryEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getDATATYPEAccess().getBooleanEnumLiteralDeclaration_7()); }
(	'boolean' 
)
{ after(grammarAccess.getDATATYPEAccess().getBooleanEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MULTIPLICITY__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULTIPLICITYAccess().getOPTIONALEnumLiteralDeclaration_0()); }
(	'?' 
)
{ after(grammarAccess.getMULTIPLICITYAccess().getOPTIONALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMULTIPLICITYAccess().getPLUSEnumLiteralDeclaration_1()); }
(	'+' 
)
{ after(grammarAccess.getMULTIPLICITYAccess().getPLUSEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getMULTIPLICITYAccess().getSTAREnumLiteralDeclaration_2()); }
(	'*' 
)
{ after(grammarAccess.getMULTIPLICITYAccess().getSTAREnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SDL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SDL__Group__0__Impl
	rule__SDL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SDL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSDLAccess().getSDLAction_0()); }
(

)
{ after(grammarAccess.getSDLAccess().getSDLAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SDL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SDL__Group__1__Impl
	rule__SDL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SDL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSDLAccess().getModuleKeyword_1()); }

	'module' 

{ after(grammarAccess.getSDLAccess().getModuleKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SDL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SDL__Group__2__Impl
	rule__SDL__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SDL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSDLAccess().getNameAssignment_2()); }
(rule__SDL__NameAssignment_2)
{ after(grammarAccess.getSDLAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SDL__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SDL__Group__3__Impl
	rule__SDL__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SDL__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSDLAccess().getImportsAssignment_3()); }
(rule__SDL__ImportsAssignment_3)*
{ after(grammarAccess.getSDLAccess().getImportsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SDL__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SDL__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SDL__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSDLAccess().getAlternatives_4()); }
(rule__SDL__Alternatives_4)*
{ after(grammarAccess.getSDLAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Service__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__0__Impl
	rule__Service__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getServiceAction_0()); }
(

)
{ after(grammarAccess.getServiceAccess().getServiceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__1__Impl
	rule__Service__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getServiceKeyword_1()); }

	'Service' 

{ after(grammarAccess.getServiceAccess().getServiceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__2__Impl
	rule__Service__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getNameAssignment_2()); }
(rule__Service__NameAssignment_2)
{ after(grammarAccess.getServiceAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__3__Impl
	rule__Service__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__4__Impl
	rule__Service__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getGroup_4()); }
(rule__Service__Group_4__0)*
{ after(grammarAccess.getServiceAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Service__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group_4__0__Impl
	rule__Service__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getOperationKeyword_4_0()); }

	'operation' 

{ after(grammarAccess.getServiceAccess().getOperationKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getOperationsAssignment_4_1()); }
(rule__Service__OperationsAssignment_4_1)
{ after(grammarAccess.getServiceAccess().getOperationsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Operation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOperationAction_0()); }
(

)
{ after(grammarAccess.getOperationAccess().getOperationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameAssignment_1()); }
(rule__Operation__NameAssignment_1)
{ after(grammarAccess.getOperationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_3()); }
(rule__Operation__Group_3__0)?
{ after(grammarAccess.getOperationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__4__Impl
	rule__Operation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_4()); }
(rule__Operation__Group_4__0)?
{ after(grammarAccess.getOperationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Operation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__0__Impl
	rule__Operation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getInputKeyword_3_0()); }

	'input' 

{ after(grammarAccess.getOperationAccess().getInputKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__1__Impl
	rule__Operation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getInputNameAssignment_3_1()); }
(rule__Operation__InputNameAssignment_3_1)
{ after(grammarAccess.getOperationAccess().getInputNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__2__Impl
	rule__Operation__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getColonKeyword_3_2()); }

	':' 

{ after(grammarAccess.getOperationAccess().getColonKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getInputTypeAssignment_3_3()); }
(rule__Operation__InputTypeAssignment_3_3)
{ after(grammarAccess.getOperationAccess().getInputTypeAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Operation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_4__0__Impl
	rule__Operation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOutputKeyword_4_0()); }

	'output' 

{ after(grammarAccess.getOperationAccess().getOutputKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_4__1__Impl
	rule__Operation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOutputNameAssignment_4_1()); }
(rule__Operation__OutputNameAssignment_4_1)
{ after(grammarAccess.getOperationAccess().getOutputNameAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_4__2__Impl
	rule__Operation__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getColonKeyword_4_2()); }

	':' 

{ after(grammarAccess.getOperationAccess().getColonKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOutputTypeAssignment_4_3()); }
(rule__Operation__OutputTypeAssignment_4_3)
{ after(grammarAccess.getOperationAccess().getOutputTypeAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Node__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__0__Impl
	rule__Node__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNodeAction_0()); }
(

)
{ after(grammarAccess.getNodeAccess().getNodeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__1__Impl
	rule__Node__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNodeKeyword_1()); }

	'Node' 

{ after(grammarAccess.getNodeAccess().getNodeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__2__Impl
	rule__Node__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNameAssignment_2()); }
(rule__Node__NameAssignment_2)
{ after(grammarAccess.getNodeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__3__Impl
	rule__Node__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getUriKeyword_3()); }

	'uri' 

{ after(grammarAccess.getNodeAccess().getUriKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__4__Impl
	rule__Node__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getNodeAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__5__Impl
	rule__Node__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getBaseURIAssignment_5()); }
(rule__Node__BaseURIAssignment_5)
{ after(grammarAccess.getNodeAccess().getBaseURIAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__6__Impl
	rule__Node__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getHostsKeyword_6()); }

	'hosts' 

{ after(grammarAccess.getNodeAccess().getHostsKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__7__Impl
	rule__Node__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_7()); }

	'{' 

{ after(grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__8__Impl
	rule__Node__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getServicesAssignment_8()); }
(rule__Node__ServicesAssignment_8)
{ after(grammarAccess.getNodeAccess().getServicesAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__9__Impl
	rule__Node__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getGroup_9()); }
(rule__Node__Group_9__0)*
{ after(grammarAccess.getNodeAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Node__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_9__0__Impl
	rule__Node__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getCommaKeyword_9_0()); }

	',' 

{ after(grammarAccess.getNodeAccess().getCommaKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getServicesAssignment_9_1()); }
(rule__Node__ServicesAssignment_9_1)
{ after(grammarAccess.getNodeAccess().getServicesAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComplexElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexElement__Group__0__Impl
	rule__ComplexElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexElementAccess().getComplexElementAction_0()); }
(

)
{ after(grammarAccess.getComplexElementAccess().getComplexElementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexElement__Group__1__Impl
	rule__ComplexElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexElementAccess().getComplexDataKeyword_1()); }

	'complex-data' 

{ after(grammarAccess.getComplexElementAccess().getComplexDataKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexElement__Group__2__Impl
	rule__ComplexElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexElementAccess().getNameAssignment_2()); }
(rule__ComplexElement__NameAssignment_2)
{ after(grammarAccess.getComplexElementAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexElement__Group__3__Impl
	rule__ComplexElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexElementAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getComplexElementAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexElement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexElement__Group__4__Impl
	rule__ComplexElement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexElement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexElementAccess().getElementsAssignment_4()); }
(rule__ComplexElement__ElementsAssignment_4)*
{ after(grammarAccess.getComplexElementAccess().getElementsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexElement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexElement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexElement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexElementAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getComplexElementAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SimpleElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleElement__Group__0__Impl
	rule__SimpleElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleElementAccess().getSimpleElementAction_0()); }
(

)
{ after(grammarAccess.getSimpleElementAccess().getSimpleElementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleElement__Group__1__Impl
	rule__SimpleElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleElementAccess().getNameAssignment_1()); }
(rule__SimpleElement__NameAssignment_1)
{ after(grammarAccess.getSimpleElementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleElement__Group__2__Impl
	rule__SimpleElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleElementAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getSimpleElementAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleElement__Group__3__Impl
	rule__SimpleElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleElementAccess().getAlternatives_3()); }
(rule__SimpleElement__Alternatives_3)
{ after(grammarAccess.getSimpleElementAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleElement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleElement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleElement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleElementAccess().getMultiplicityAssignment_4()); }
(rule__SimpleElement__MultiplicityAssignment_4)?
{ after(grammarAccess.getSimpleElementAccess().getMultiplicityAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getGroup_1()); }
(rule__FQN__Group_1__0)*
{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FqnWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FqnWildcard__Group__0__Impl
	rule__FqnWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FqnWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFqnWildcardAccess().getFQNParserRuleCall_0()); }
	ruleFQN
{ after(grammarAccess.getFqnWildcardAccess().getFQNParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FqnWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FqnWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FqnWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFqnWildcardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getFqnWildcardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__SDL__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSDLAccess().getNameFQNParserRuleCall_2_0()); }
	ruleFQN{ after(grammarAccess.getSDLAccess().getNameFQNParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SDL__ImportsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSDLAccess().getImportsImportParserRuleCall_3_0()); }
	ruleImport{ after(grammarAccess.getSDLAccess().getImportsImportParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SDL__ServicesAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSDLAccess().getServicesServiceParserRuleCall_4_0_0()); }
	ruleService{ after(grammarAccess.getSDLAccess().getServicesServiceParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SDL__DataAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSDLAccess().getDataDataElementParserRuleCall_4_1_0()); }
	ruleDataElement{ after(grammarAccess.getSDLAccess().getDataDataElementParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SDL__NodesAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSDLAccess().getNodesNodeParserRuleCall_4_2_0()); }
	ruleNode{ after(grammarAccess.getSDLAccess().getNodesNodeParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Service__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Service__OperationsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getOperationsOperationParserRuleCall_4_1_0()); }
	ruleOperation{ after(grammarAccess.getServiceAccess().getOperationsOperationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__InputNameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getInputNameSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getOperationAccess().getInputNameSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__InputTypeAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getInputTypeDataElementCrossReference_3_3_0()); }
(
{ before(grammarAccess.getOperationAccess().getInputTypeDataElementFQNParserRuleCall_3_3_0_1()); }
	ruleFQN{ after(grammarAccess.getOperationAccess().getInputTypeDataElementFQNParserRuleCall_3_3_0_1()); }
)
{ after(grammarAccess.getOperationAccess().getInputTypeDataElementCrossReference_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__OutputNameAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOutputNameSTRINGTerminalRuleCall_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getOperationAccess().getOutputNameSTRINGTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__OutputTypeAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOutputTypeDataElementCrossReference_4_3_0()); }
(
{ before(grammarAccess.getOperationAccess().getOutputTypeDataElementFQNParserRuleCall_4_3_0_1()); }
	ruleFQN{ after(grammarAccess.getOperationAccess().getOutputTypeDataElementFQNParserRuleCall_4_3_0_1()); }
)
{ after(grammarAccess.getOperationAccess().getOutputTypeDataElementCrossReference_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__BaseURIAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getBaseURISTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getNodeAccess().getBaseURISTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__ServicesAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getServicesServiceCrossReference_8_0()); }
(
{ before(grammarAccess.getNodeAccess().getServicesServiceFQNParserRuleCall_8_0_1()); }
	ruleFQN{ after(grammarAccess.getNodeAccess().getServicesServiceFQNParserRuleCall_8_0_1()); }
)
{ after(grammarAccess.getNodeAccess().getServicesServiceCrossReference_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__ServicesAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getServicesServiceCrossReference_9_1_0()); }
(
{ before(grammarAccess.getNodeAccess().getServicesServiceFQNParserRuleCall_9_1_0_1()); }
	ruleFQN{ after(grammarAccess.getNodeAccess().getServicesServiceFQNParserRuleCall_9_1_0_1()); }
)
{ after(grammarAccess.getNodeAccess().getServicesServiceCrossReference_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexElement__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexElementAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getComplexElementAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexElement__ElementsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexElementAccess().getElementsSimpleElementParserRuleCall_4_0()); }
	ruleSimpleElement{ after(grammarAccess.getComplexElementAccess().getElementsSimpleElementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleElement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleElementAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSimpleElementAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleElement__TypeAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleElementAccess().getTypeDATATYPEEnumRuleCall_3_0_0()); }
	ruleDATATYPE{ after(grammarAccess.getSimpleElementAccess().getTypeDATATYPEEnumRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleElement__RefAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleElementAccess().getRefComplexElementCrossReference_3_1_0()); }
(
{ before(grammarAccess.getSimpleElementAccess().getRefComplexElementFQNParserRuleCall_3_1_0_1()); }
	ruleFQN{ after(grammarAccess.getSimpleElementAccess().getRefComplexElementFQNParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getSimpleElementAccess().getRefComplexElementCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleElement__MultiplicityAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleElementAccess().getMultiplicityMULTIPLICITYEnumRuleCall_4_0()); }
	ruleMULTIPLICITY{ after(grammarAccess.getSimpleElementAccess().getMultiplicityMULTIPLICITYEnumRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceFqnWildcardParserRuleCall_1_0()); }
	ruleFqnWildcard{ after(grammarAccess.getImportAccess().getImportedNamespaceFqnWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


